# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'query_report.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from openpyxl import load_workbook
import datetime



class QueryReport(QtWidgets.QWidget):
    def __init__(self,parent=None,subParent = None, idx = 1):
        self.parent = subParent
        super(QueryReport, self).__init__(parent)
        super(QueryReport, self).__init__()
        path = ''
        self.fileName = './File/record/'+str(idx) +'.xlsx'
        self.theFile = load_workbook(self.fileName)
        self.fin = self.theFile.active

        self.setObjectName("query report")
        self.resize(568, 353)
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(80, 60, 54, 12))
        self.label.setObjectName("label")
        self.time = QtWidgets.QLineEdit(self)
        self.time.setGeometry(QtCore.QRect(160, 55, 141, 20))
        self.time.setObjectName("time")
        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(80, 115, 54, 12))
        self.label_2.setObjectName("label_2")
        self.name = QtWidgets.QLineEdit(self)
        self.name.setGeometry(QtCore.QRect(160, 110, 141, 20))
        self.name.setObjectName("name")
        self.number = QtWidgets.QLineEdit(self)
        self.number.setGeometry(QtCore.QRect(160, 165, 141, 20))
        self.number.setObjectName("number")
        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(80, 170, 54, 12))
        self.label_3.setObjectName("label_3")
        self.source = QtWidgets.QLineEdit(self)
        self.source.setGeometry(QtCore.QRect(160, 225, 141, 20))
        self.source.setText("")
        self.source.setObjectName("source")
        self.label_4 = QtWidgets.QLabel(self)
        self.label_4.setGeometry(QtCore.QRect(80, 230, 54, 12))
        self.label_4.setObjectName("label_4")
        self.query = QtWidgets.QPushButton(self)
        self.query.setGeometry(QtCore.QRect(400, 60, 75, 23))
        self.query.setObjectName("query")
        self.exit = QtWidgets.QPushButton(self)
        self.exit.setGeometry(QtCore.QRect(400, 110, 75, 23))
        self.exit.setObjectName("exit")

        self.query.clicked.connect(self.Query)
        self.exit.clicked.connect(self.handClose)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "self"))
        self.label.setText(_translate("self", "试验时间"))
        self.label_2.setText(_translate("self", "试验名称"))
        self.label_3.setText(_translate("self", "试样编号"))
        self.label_4.setText(_translate("self", "试样来源"))
        self.query.setText(_translate("self", "查询"))
        self.exit.setText(_translate("self", "关闭"))

    def Query(self):
        result = []
        # filesName = []
        testTime = self.time.text()
        testName = self.name.text()
        testNumber = self.number.text()
        testOrigin = self.source.text()
        queryDate = datetime.datetime.now().date()
        if testTime != '':
            try:
                queryDate = datetime.datetime.strptime(testTime, "%Y.%m.%d").date()
            except Exception as e:
                print(e)
                # QtWidgets.QMessageBox.information(self, '查询结果', '共找到{}条符合的记录{}')
                QtWidgets.QMessageBox.warning(self,'提示','日期格式为2021.1.1 ，请输入规范')
                return []

        maxRow = self.fin.max_row + 1
        for i in range(2, maxRow):
            getTestDate = datetime.datetime.strptime(str(self.fin[i][1].value), "%Y-%m-%d %H:%M:%S").date()
            getTestName = self.fin[i][3].value
            getTestNumber = self.fin[i][4].value
            getTestOrigin = self.fin[i][5].value
            if (testTime == '' or queryDate == getTestDate) \
                    and (testName == '' or testName == getTestName) \
                    and (testNumber == '' or testNumber == getTestNumber) \
                    and (testOrigin == '' or testOrigin == getTestOrigin):
                result.append(self.fin[i][8].value)
        resultLen = len(result)
        messageResult = ''
        for i in range(resultLen):
            messageResult += '\n'
            messageResult += result[i]
        messagebox = QtWidgets.QMessageBox()
        messagebox.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        messagebox.setWindowTitle("查询结果")
        messagebox.setText('共找到{}条符合的记录{}'.format(resultLen,messageResult))
        messagebox.exec_()

        return result

    def handClose(self):
        self.setHidden(True)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QueryReport()
    mainWindow.show()
    sys.exit(app.exec_())